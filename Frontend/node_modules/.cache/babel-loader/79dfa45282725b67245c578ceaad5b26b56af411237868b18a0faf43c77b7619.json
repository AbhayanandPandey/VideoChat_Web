{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\OneDrive\\\\Documents\\\\Desktop\\\\VideoChat_App\\\\frontend\\\\src\\\\components\\\\VideoRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000'); // Update to your backend URL\n\nconst VideoRoom = ({\n  roomId\n}) => {\n  _s();\n  const localVideoRef = useRef(null);\n  const localStreamRef = useRef(null);\n  const remoteVideosRef = useRef({});\n  const peersRef = useRef({});\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n\n  // Add remote video stream to DOM\n  const addRemoteStream = (id, stream) => {\n    if (!remoteVideosRef.current[id]) {\n      const videoElement = document.createElement('video');\n      videoElement.autoplay = true;\n      videoElement.playsInline = true;\n      videoElement.srcObject = stream;\n      videoElement.id = id;\n      document.getElementById('remote-videos').appendChild(videoElement);\n      remoteVideosRef.current[id] = videoElement;\n    }\n  };\n\n  // Remove remote video stream from DOM\n  const removeRemoteStream = id => {\n    if (remoteVideosRef.current[id]) {\n      remoteVideosRef.current[id].srcObject = null;\n      remoteVideosRef.current[id].remove();\n      delete remoteVideosRef.current[id];\n    }\n  };\n  useEffect(() => {\n    const pcConfig = {\n      iceServers: [{\n        urls: 'stun:stun.l.google.com:19302'\n      }]\n    };\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      localStreamRef.current = stream;\n      if (localVideoRef.current) {\n        localVideoRef.current.srcObject = stream;\n      }\n      socket.emit('join-room', roomId, socket.id);\n      socket.on('user-connected', async userId => {\n        if (userId === socket.id) return;\n        const pc = new RTCPeerConnection(pcConfig);\n        peersRef.current[userId] = pc;\n        stream.getTracks().forEach(track => pc.addTrack(track, stream));\n        pc.onicecandidate = e => {\n          if (e.candidate) {\n            socket.emit('ice-candidate', {\n              target: userId,\n              candidate: e.candidate\n            });\n          }\n        };\n        pc.ontrack = e => addRemoteStream(userId, e.streams[0]);\n        const offer = await pc.createOffer();\n        await pc.setLocalDescription(offer);\n        socket.emit('offer', {\n          target: userId,\n          sdp: offer\n        });\n        setMessages(prev => [...prev, {\n          user: 'System',\n          message: `${userId} has joined the room.`\n        }]);\n      });\n      socket.on('offer', async ({\n        sender,\n        sdp\n      }) => {\n        const pc = new RTCPeerConnection(pcConfig);\n        peersRef.current[sender] = pc;\n        stream.getTracks().forEach(track => pc.addTrack(track, stream));\n        pc.onicecandidate = e => {\n          if (e.candidate) {\n            socket.emit('ice-candidate', {\n              target: sender,\n              candidate: e.candidate\n            });\n          }\n        };\n        pc.ontrack = e => addRemoteStream(sender, e.streams[0]);\n        await pc.setRemoteDescription(new RTCSessionDescription(sdp));\n        const answer = await pc.createAnswer();\n        await pc.setLocalDescription(answer);\n        socket.emit('answer', {\n          target: sender,\n          sdp: answer\n        });\n      });\n      socket.on('answer', async ({\n        sender,\n        sdp\n      }) => {\n        const pc = peersRef.current[sender];\n        if (pc) {\n          await pc.setRemoteDescription(new RTCSessionDescription(sdp));\n        }\n      });\n      socket.on('ice-candidate', ({\n        sender,\n        candidate\n      }) => {\n        const pc = peersRef.current[sender];\n        if (pc && candidate) {\n          pc.addIceCandidate(new RTCIceCandidate(candidate));\n        }\n      });\n      socket.on('user-disconnected', id => {\n        if (peersRef.current[id]) {\n          peersRef.current[id].close();\n          delete peersRef.current[id];\n          removeRemoteStream(id);\n        }\n      });\n      socket.on('chat-message', data => {\n        var _data$message$message, _data$message;\n        const text = typeof data.message === 'object' ? (_data$message$message = (_data$message = data.message) === null || _data$message === void 0 ? void 0 : _data$message.message) !== null && _data$message$message !== void 0 ? _data$message$message : JSON.stringify(data.message) : data.message;\n        if (data.user !== socket.id) {\n          setMessages(prev => [...prev, {\n            user: data.user,\n            message: text\n          }]);\n        }\n      });\n    }).catch(err => console.error('Media error:', err));\n    return () => {\n      Object.values(peersRef.current).forEach(pc => pc.close());\n      socket.disconnect();\n    };\n  }, [roomId]);\n  const handleSendMessage = () => {\n    if (inputMessage.trim()) {\n      socket.emit('chat-message', {\n        roomId,\n        message: inputMessage,\n        user: socket.id\n      });\n      setMessages(prev => [...prev, {\n        user: socket.id,\n        message: inputMessage\n      }]);\n      setInputMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Room: \", roomId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: localVideoRef,\n        autoPlay: true,\n        muted: true,\n        playsInline: true,\n        style: {\n          width: '300px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"remote-videos\",\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        gap: '1rem'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          maxHeight: '200px',\n          overflowY: 'auto',\n          border: '1px solid #ccc',\n          padding: '10px'\n        },\n        children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.user, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 28\n          }, this), \" \", msg.message]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputMessage,\n        onChange: e => setInputMessage(e.target.value),\n        onKeyDown: e => e.key === 'Enter' && handleSendMessage(),\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoRoom, \"FsGXLFqxNnu+Y7tam1Sp0jye2Bw=\");\n_c = VideoRoom;\nexport default VideoRoom;\nvar _c;\n$RefreshReg$(_c, \"VideoRoom\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","jsxDEV","_jsxDEV","socket","VideoRoom","roomId","_s","localVideoRef","localStreamRef","remoteVideosRef","peersRef","messages","setMessages","inputMessage","setInputMessage","addRemoteStream","id","stream","current","videoElement","document","createElement","autoplay","playsInline","srcObject","getElementById","appendChild","removeRemoteStream","remove","pcConfig","iceServers","urls","navigator","mediaDevices","getUserMedia","video","audio","then","emit","on","userId","pc","RTCPeerConnection","getTracks","forEach","track","addTrack","onicecandidate","e","candidate","target","ontrack","streams","offer","createOffer","setLocalDescription","sdp","prev","user","message","sender","setRemoteDescription","RTCSessionDescription","answer","createAnswer","addIceCandidate","RTCIceCandidate","close","data","_data$message$message","_data$message","text","JSON","stringify","catch","err","console","error","Object","values","disconnect","handleSendMessage","trim","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","muted","style","width","display","flexWrap","gap","maxHeight","overflowY","border","padding","map","msg","idx","type","value","onChange","onKeyDown","key","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/OneDrive/Documents/Desktop/VideoChat_App/frontend/src/components/VideoRoom.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nconst socket = io('http://localhost:5000'); // Update to your backend URL\r\n\r\nconst VideoRoom = ({ roomId }) => {\r\n  const localVideoRef = useRef(null);\r\n  const localStreamRef = useRef(null);\r\n  const remoteVideosRef = useRef({});\r\n  const peersRef = useRef({});\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputMessage, setInputMessage] = useState('');\r\n\r\n  // Add remote video stream to DOM\r\n  const addRemoteStream = (id, stream) => {\r\n    if (!remoteVideosRef.current[id]) {\r\n      const videoElement = document.createElement('video');\r\n      videoElement.autoplay = true;\r\n      videoElement.playsInline = true;\r\n      videoElement.srcObject = stream;\r\n      videoElement.id = id;\r\n      document.getElementById('remote-videos').appendChild(videoElement);\r\n      remoteVideosRef.current[id] = videoElement;\r\n    }\r\n  };\r\n\r\n  // Remove remote video stream from DOM\r\n  const removeRemoteStream = (id) => {\r\n    if (remoteVideosRef.current[id]) {\r\n      remoteVideosRef.current[id].srcObject = null;\r\n      remoteVideosRef.current[id].remove();\r\n      delete remoteVideosRef.current[id];\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const pcConfig = {\r\n      iceServers: [{ urls: 'stun:stun.l.google.com:19302' }]\r\n    };\r\n\r\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n      .then(stream => {\r\n        localStreamRef.current = stream;\r\n        if (localVideoRef.current) {\r\n          localVideoRef.current.srcObject = stream;\r\n        }\r\n\r\n        socket.emit('join-room', roomId, socket.id);\r\n\r\n        socket.on('user-connected', async userId => {\r\n          if (userId === socket.id) return;\r\n\r\n          const pc = new RTCPeerConnection(pcConfig);\r\n          peersRef.current[userId] = pc;\r\n\r\n          stream.getTracks().forEach(track => pc.addTrack(track, stream));\r\n\r\n          pc.onicecandidate = e => {\r\n            if (e.candidate) {\r\n              socket.emit('ice-candidate', { target: userId, candidate: e.candidate });\r\n            }\r\n          };\r\n\r\n          pc.ontrack = e => addRemoteStream(userId, e.streams[0]);\r\n\r\n          const offer = await pc.createOffer();\r\n          await pc.setLocalDescription(offer);\r\n          socket.emit('offer', { target: userId, sdp: offer });\r\n\r\n          setMessages(prev => [...prev, { user: 'System', message: `${userId} has joined the room.` }]);\r\n        });\r\n\r\n        socket.on('offer', async ({ sender, sdp }) => {\r\n          const pc = new RTCPeerConnection(pcConfig);\r\n          peersRef.current[sender] = pc;\r\n\r\n          stream.getTracks().forEach(track => pc.addTrack(track, stream));\r\n\r\n          pc.onicecandidate = e => {\r\n            if (e.candidate) {\r\n              socket.emit('ice-candidate', { target: sender, candidate: e.candidate });\r\n            }\r\n          };\r\n\r\n          pc.ontrack = e => addRemoteStream(sender, e.streams[0]);\r\n\r\n          await pc.setRemoteDescription(new RTCSessionDescription(sdp));\r\n          const answer = await pc.createAnswer();\r\n          await pc.setLocalDescription(answer);\r\n          socket.emit('answer', { target: sender, sdp: answer });\r\n        });\r\n\r\n        socket.on('answer', async ({ sender, sdp }) => {\r\n          const pc = peersRef.current[sender];\r\n          if (pc) {\r\n            await pc.setRemoteDescription(new RTCSessionDescription(sdp));\r\n          }\r\n        });\r\n\r\n        socket.on('ice-candidate', ({ sender, candidate }) => {\r\n          const pc = peersRef.current[sender];\r\n          if (pc && candidate) {\r\n            pc.addIceCandidate(new RTCIceCandidate(candidate));\r\n          }\r\n        });\r\n\r\n        socket.on('user-disconnected', id => {\r\n          if (peersRef.current[id]) {\r\n            peersRef.current[id].close();\r\n            delete peersRef.current[id];\r\n            removeRemoteStream(id);\r\n          }\r\n        });\r\n\r\n        socket.on('chat-message', data => {\r\n          const text = typeof data.message === 'object'\r\n            ? (data.message?.message ?? JSON.stringify(data.message))\r\n            : data.message;\r\n\r\n          if (data.user !== socket.id) {\r\n            setMessages(prev => [...prev, { user: data.user, message: text }]);\r\n          }\r\n        });\r\n      })\r\n      .catch(err => console.error('Media error:', err));\r\n\r\n    return () => {\r\n      Object.values(peersRef.current).forEach(pc => pc.close());\r\n      socket.disconnect();\r\n    };\r\n  }, [roomId]);\r\n\r\n  const handleSendMessage = () => {\r\n    if (inputMessage.trim()) {\r\n      socket.emit('chat-message', { roomId, message: inputMessage, user: socket.id });\r\n      setMessages(prev => [...prev, { user: socket.id, message: inputMessage }]);\r\n      setInputMessage('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Room: {roomId}</h2>\r\n\r\n      <div>\r\n        <video ref={localVideoRef} autoPlay muted playsInline style={{ width: '300px' }} />\r\n      </div>\r\n\r\n      <div id=\"remote-videos\" style={{ display: 'flex', flexWrap: 'wrap', gap: '1rem' }}></div>\r\n\r\n      <div>\r\n        <h3>Chat</h3>\r\n        <div style={{ maxHeight: '200px', overflowY: 'auto', border: '1px solid #ccc', padding: '10px' }}>\r\n          {messages.map((msg, idx) => (\r\n            <div key={idx}><strong>{msg.user}:</strong> {msg.message}</div>\r\n          ))}\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          value={inputMessage}\r\n          onChange={(e) => setInputMessage(e.target.value)}\r\n          onKeyDown={(e) => e.key === 'Enter' && handleSendMessage()}\r\n          placeholder=\"Type a message...\"\r\n        />\r\n        <button onClick={handleSendMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoRoom;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}